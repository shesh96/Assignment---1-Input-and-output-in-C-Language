//Q1. Write a program to find the Nth term of the Fibonnaci series.
 #include<stdio.h>
 int main(){
     int prev=0,cur=1,next=0,i,n;
     printf("Enter a number ");
     scanf("%d",&n);

    for ( i = 0; i < n-1; i++)
    {
        next=prev + cur;
        prev = cur;
        cur= next;
    }
    printf("%d ",next);

    return 0;
}

//Q2. Write a program to print first N terms of Fibonacci series
 #include<stdio.h>
 int main(){
     int prev=0,cur=1,next=0,i,n;
     printf("Enter a number ");
     scanf("%d",&n);
     printf("1 ");
     for ( i = 0; i < n-1; i++)
     {
         next=prev + cur;
         printf("%d ",next);
         prev = cur;
         cur= next;
     }

    return 0;
}

//Q3. Write a program to check whether a given number is there in the Fibonacci series or not.
 #include<stdio.h>
 int main(){
     int prev=0,cur=1,next=0,i,n;
     printf("Enter a number ");
     scanf("%d",&n);

    for ( i = 0; 1; i++)
    {
        next=prev + cur;
        prev = cur;
        cur= next;
        if (next==n)
        {
            printf("number found ");
            break;
        }
        if (next > n)
        {
            printf(" Not found ");
            break;
        }

    }

    return 0;
}

//Q4. Write a program to calculate HCF of two numbers
 #include<stdio.h>
 int main(){
     int a,b,i,hcf=1;
     printf("enter two number ");
     scanf("%d%d",&a,&b);
     int min=a<b?a:b;
     for ( i = 1; i <=min; i++)
     {
         if((a%i==0) && (b%i==0))
         hcf=i;
     }
     printf("HCF is%d ",hcf);

    return 0;
}

//Q5. Write a program to check whether two given numbers are co-prime numbers or not

#include<stdio.h>
int main(){
    int a,b,i,hcf=1;
    printf("enter two number ");
    scanf("%d%d",&a,&b);
    int min=a<b?a:b;
    for ( i = 1; i <=min; i++)
    {
        if((a%i==0) && (b%i==0))
        hcf=i;
    }
     if (hcf==1)
     {
        printf("Co-prime number");

     }
     else
     printf("Not Co-prime ");
    return 0;
}

//Q6. Write a program to print all Prime numbers under 100
 #include<stdio.h>
 int main(){
     int i,n,flag=0;
     for ( n = 2; n <= 100; n++)
     {
         flag=0;
         for( i = 2; i <= n/2; i++)
         {
             if(n%i==0)
             flag=1;
         }
         if(flag==0)
         printf("%d\n",n);

    }

    return 0;
}

//Q7. Write a program to print all Prime numbers between two given numbers
 #include<stdio.h>
 int main(){
     int i,n,flag=0,a,b;
     printf("enter two number ");
     scanf("%d%d",&a,&b);
     for ( n = a; n <= b; n++)
     {
         flag=0;
         for( i = 2; i <= n/2; i++)
         {
             if(n%i==0)
             flag=1;
         }
         if(flag==0)
         printf("%d\n",n);

    }

    return 0;
}

//Q8. Write a program to find next Prime number of a given number.
 #include<stdio.h>
 int main(){
     int i,n,flag=0,a;
     printf("enter a number ");
     scanf("%d",&a);
     for ( n = a; 1 ; n++)
     {
         flag=0;
         for( i = 2; i <= n/2; i++)
         {
             if(n%i==0)
             flag=1;
         }
         if(flag==0){
         printf("%d\n",n);
         break;
         }
     }

    return 0;
}

//Q9. Write a program to check whether a given number is an Armstrong number or not.

#include <stdio.h>
int main()
{
    int n, arm=0,r,c;
    printf("enter any number ");
    scanf("%d", &n);
    
        c=n;
        
        while (n> 0)
        {
            r = n % 10;
            arm = arm + r * r * r;
            n = n / 10;
        }
    
    if (c == arm)
    {
        printf("YES");
    }else printf("NOT");

    return 0;
}

//Q10. Write a program to print all Armstrong numbers under 1000
 #include<stdio.h>
 int main(){
     int n,r,x,sum;
     printf("Armstrong numbers are ");
     for ( n = 1; n <= 1000; n++)
     {
         sum=0;
         x=n;
         while(x!=0){
             r=x%10;
             sum= sum+r*r*r;
             x=x/10;
         }
         if(sum==n)
         printf("%d\n",n);
     }

    return 0;
}
