// Q1. Write a function to calculate the area of a circle. (TSRS)

 #include<stdio.h>
 float area(int );
 int main()
 {   int r;
     float x;
     printf("enter a Radius:");
     scanf("%d",&r);
     x=area(r);
     printf("area of circlr is %f",x);
     return 0;
 }
  float area(int b)
 { float a;
  a=3.141*b*b;
  return a;

}
// Q2. Write a function to calculate simple interest. (TSRS)

#include<stdio.h>
float interest(int P,int R,int T);
int main(){
    int a,b,c;
    printf("enter a three value:");
    scanf("%d%d%d",&a,&b,&c);
    interest(a,b,c);
    printf("\nsimple interest is%f",interest(a,b,c));
    return 0;
}
float interest(int P,int R,int T){
float si;
si=(P*R*T)/100.0;
return si;
}
// Q3. Write a function to check whether a given number is even or odd. Return 1 if the
// number is even, otherwise return 0. (TSRS)
#include<stdio.h>
 int oddeven(int n);
int main(){
    int x;
    printf("enter a  value:");
    scanf("%d",&x);
    printf("result is %d",oddeven(x));
    oddeven(x);

    return 0;
}
 int oddeven(int n){
    if (n%2==0)
    {
        return 1;
    }
    else
    return 0;

}
// Q4. Write a function to print first N natural numbers (TSRN)

#include<stdio.h>
void Nnatural(int );
int main()
{   int n;

    printf("enter a number:");
    scanf("%d",&n);
    Nnatural(n);

    return 0;
}
 void Nnatural(int c)
{
    int i=1;
 while (i<=c)
 {
    printf("\n%d",i);
    i++;
 }

}
// Q5. Write a function to print first N odd natural numbers. (TSRN)

#include<stdio.h>
void Nodd(int );
int main()
{   int n;

    printf("enter a number:");
    scanf("%d",&n);
    Nodd(n);

    return 0;
}
 void Nodd(int c)
{
    int i=1;
 while (i<=c)
 {  if(i%2!=0)
    printf("\n%d",i);
    i++;
 }
}
// Q6. Write a function to calculate the factorial of a number. (TSRS)

#include <stdio.h>
int fact(int n);
int main()
{    int n;
    printf("enter a  number:");
    scanf("%d",&n);
     printf("%d",fact(n));

    return 0;
}

int fact(int n)
{

    long long f = 1;
    for (int i = 1; i <= n; i++)

    {
        f = f * i;
    }
    return f;
}
// Q7. Write a function to calculate the number of combinations one can make from n items
// and r selected at a time. (TSRS)

#include <stdio.h>
int fact(int n);
int main()
{    int n,r;
    printf("enter two number:");
    scanf("%d%d",&n,&r);
     printf("%d",fact(n)/(fact(r)*fact(n-r)));

    return 0;
}

int fact(int n)
{

    long long f = 1;
    for (int i = 1; i <= n; i++)

    {
        f = f * i;
    }
    return f;
}

//Q8. Write a function to calculate the number of arrangements one can make from n items
//and r selected at a time. (TSRS)

#include <stdio.h>
int fact(int n);
int main()
{    int n,r;
    printf("enter two number:");
    scanf("%d%d",&n,&r);
     printf("%d",fact(n)/fact(n-r));

    return 0;
}

int fact(int n)
{

    long long f = 1;
    for (int i = 1; i <= n; i++)

    {
        f = f * i;
    }
    return f;
}
//Q9. Write a function to check whether a given number contains a given digit or not.(TSRS)
#include<stdio.h>
 int IsDigitOrNot(int n,int d);
int main()
{     int n,d;
    printf("enter number and digit:");
    scanf("%d%d",&n,&d);
    printf("%d",IsDigitOrNot(n,d));
    return 0;
}
int IsDigitOrNot(int n,int d)
{
    while (n>0)
    {
        int digit=n%10;
        if (digit==d)
        {
            return digit;
            break;
        }
        n=n/10;

    }
    return -1;
}
//Q10. Write a function to print all prime factors of a given number. For example, if the
//number is 36 then your result should be 2, 2, 3, 3. (TSRN)

#include <stdio.h>
void primefact(int n);
int main()
{
    int n;
    printf("enter a  number:");
    scanf("%d", &n);
   primefact(n);
    

    return 0;
}

void primefact(int x)
{

    int i;
    for (i = 2; x > 1; i++)
    {
        while (x % i == 0)
        {
           printf(" %d ",i);
            x = x / i;
           
        }
        
    }
    
}
